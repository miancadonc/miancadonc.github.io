---
layout: post
title:      "Frustrating Roadblocks"
date:       2020-03-03 14:09:09 +0000
permalink:  frustrating_roadblocks
---


##1- Sometimes when you're working with gems, they just don't work, simple as that. If your googling skills are failing you, and you don't seem to be fixing the problem on your own, sometimes you are presented with a choice. You have to either ask for help or consider how vital the gem is to you. For my sinatra project, I decided that tux wasn't the most important thing to me, so I took a load off my own shoulders when I stopped trying to figure out why I couldn't use it in my project directory. What a happy feeling! Unfortunately I probably could have used tux when my database started to go screwy.

##2- While working on my sinatra project, I couldn't get any objects to persist their assigned attributes in my database, and all my methods that relied on knowing said attributes just broke my code and made sinatra yell at me about trying to feed it nils. It was pretty frustrating, I have to admit. I rolled back migrations, redid them, migrated again, and uncautiously deleted and regenerated two or three different databases just to try and get everything to track. I was pretty sure that, at some point, my database HAD been configured, so I was pretty annoyed when all of my meddling led my errors to simply start telling me that the databse wasn't configured for my environment. In the end I used a different, simpler, and I'm pretty sure less useful syntax to configure my database- I don't really know how it would work off of my machine anymore, but I'm just glad I got it working to the point where I could flesh out the rest of the project :D. I'm being sincere here, I think it's important to make your stuf work to the point where you can finish the other parts of the project that depend on it! After all, you can revisit the design later if it starts to break again when you're trying to do something new. And when that happens, you'll probably be paying better attention to convention! Also included in this section: a lesson for Nat on how not to fix errors.

##3- Sometimes these things go wrong, and then they go right again even though you seemingly did nothing. I had some helper methods in my application controller that kept raising no method errors no matter how I tweaked them. Eventually, I reset them to the way I had them originally. I checked again, and they still didn't work. So I gave up for the day, checked again the next day, and they worked! I suppose somtimes the code elves need a code editor to be closed before they sneak into the code and fix it for you! It's easy to be humble as a new programmer, I know that for sure. I don't know about those more experienced, but the way other programmers talk, it seems like I can expect more visits from the code elves in the future.
